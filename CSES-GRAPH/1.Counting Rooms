#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

void dfs(int i, int j, vector<vector<char>> &grid, vector<vector<bool>> &visited,int n, int m)
{

visited[i][j]=true;
if(i+1<n && !visited[i+1][j] && grid[i+1][j]=='.')
{
dfs(i+1,j,grid,visited,n,m);

}
if(j+1<m && !visited[i][j+1] && grid[i][j+1]=='.')
{
dfs(i,j+1,grid,visited,n,m);

}
if(i-1>=0 && !visited[i-1][j] && grid[i-1][j]=='.')
{
dfs(i-1,j,grid,visited,n,m);

}
if(j-1>=0 && !visited[i][j-1] && grid[i][j-1]=='.')
{
dfs(i,j-1,grid,visited,n,m);

}

}

int main()
{
std::ios::sync_with_stdio(false);
cin.tie(NULL);
int n, m;
cin>>n>>m;
vector<vector<char>> grid(n,vector<char>(m));
vector<vector<bool>> visited(n,vector<bool>(m,false));
for(int i=0;i<n;i++){

for(int j=0;j<m;j++)
{
    cin>>grid[i][j];
}
}
int count=0;
for(int i=0;i<n;i++){

for(int j=0;j<m;j++)
{
if(grid[i][j]=='.' && visited[i][j]==false){
count++;
dfs(i,j,grid,visited,n,m);

}
    
}
}
cout<<count<<endl;




return 0;
}
